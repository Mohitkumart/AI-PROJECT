import streamlit as st
import datetime
import requests

BASE_URL = "http://localhost:8000"  # Backend endpoint

st.set_page_config(
    page_title="OmniAnswer – Unified Intelligence from Documents and the Web",
    page_icon="🧳",
    layout="centered",
    initial_sidebar_state="expanded"
)

st.title("🌍 OmniAnswer – Unified Intelligence from Documents and the Web")
st.subheader("OmniAnswer is a multi-agent system that fuses private document data and live web information to deliver accurate, real-time answers from anywhere.")

# 🧠 Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# 🧼 Add "New Session" button to clear chat memory
if st.button("🆕 Start New Session"):
    st.session_state.messages = []

# 🗣️ Show chat history so far
if st.session_state.messages:
    st.subheader("🧠 Chat Memory:")
    for msg in st.session_state.messages:
        st.markdown(f"**{msg['role'].capitalize()}:** {msg['content']}")

# 💬 Header prompt
st.header("How can I help you in planning a trip? Let me know where do you want to visit.")

# 📝 User input form
with st.form(key="query_form", clear_on_submit=True):
    user_input = st.text_input("Your Input", placeholder="e.g. Plan a trip to Goa for 5 days.")
    submit_button = st.form_submit_button("Send")

if submit_button and user_input.strip():
    try:
        # 🧠 Prepare payload with memory
        payload = {
            "question": user_input,
            "memory": st.session_state.messages
        }

        # ⏳ Show spinner while thinking
        with st.spinner("Thinking..."):
            response = requests.post(f"{BASE_URL}/querry", json=payload)

        if response.status_code == 200:
            answer = response.json().get("answer", "No answer returned.")

            # 🧠 Update memory
            st.session_state.messages.append({"role": "user", "content": user_input})
            st.session_state.messages.append({"role": "assistant", "content": answer})

            # 🧾 Show formatted response
            markdown_content = f"""
#  Omni-Answer
**🕒 Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}
**🤖 Created by:** Omni-Answer

---

{answer}

---

*This data was generated by AI using provided data, documents and internet. Please verify details.*
            """
            st.markdown(markdown_content)

        else:
            st.error("❌ Failed to respond: " + response.text)

    except Exception as e:
        st.error(f"🚨 An error occurred: {e}")
